name: CD

on:
  push:
    branches: [develop, ci-cd]
  workflow_dispatch:

env:
  REGISTRY: "registry.digitalocean.com/cs3219-g35-peerprep"
  IMAGE_NAME_FRONTEND: "frontend"
  IMAGE_NAME_USER_SVC: "user-service"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build frontend container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_FRONTEND) ./frontend

      - name: Build user-service container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_USER_SVC) ./user-service

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push frontend image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_FRONTEND)

      - name: Push user-service image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_USER_SVC)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Copy the latest docker-compose file to the Digital Ocean droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSHKEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_PASSPHRASE }}
          source: "./docker-compose.yml"
          target: "~"

      - name: SSH into Digital Ocean droplet and deploy latest images
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSHKEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_PASSPHRASE }}
          envs: IMAGE_NAME_FRONTEND,IMAGE_NAME_USER_SVC,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          script: |
            # Login to DigitalOcean container registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker compose down
            # Pull latest images
            docker compose pull
            # Restart docker compose stack with latest images
            docker compose up -d
